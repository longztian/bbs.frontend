
[WARNING] Try to use a single 'var' statement per scope.
;}catch(er){}} ---> var  <--- config=$.cookie=function(key,

[WARNING] Try to use a single 'var' statement per scope.
].join(""));} ---> var  <--- decode=config.raw?raw:decoded;

[WARNING] Try to use a single 'var' statement per scope.
=config.raw?raw:decoded; ---> var  <--- cookies=document.cookie.split("; ")

[WARNING] Try to use a single 'var' statement per scope.
document.cookie.split("; "); ---> var  <--- result=key?undefined:{};for

[WARNING] Try to use a single 'var' statement per scope.
key?undefined:{};for( ---> var  <--- i=0,l=cookies.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<l;i++){ ---> var  <--- parts=cookies[i].split("="

[WARNING] Try to use a single 'var' statement per scope.
[i].split("="); ---> var  <--- name=decode(parts.shift())

[WARNING] Try to use a single 'var' statement per scope.
decode(parts.shift()); ---> var  <--- cookie=decode(parts.join("=")

[WARNING] Try to use a single 'var' statement per scope.
(iframe,type){var data; ---> var  <--- contents=$(iframe).contents()

[WARNING] Try to use a single 'var' statement per scope.
[1];}});} ---> var  <--- uaMatch=function(ua){ua=ua

[WARNING] Try to use a single 'var' statement per scope.
[2]||"0"};}; ---> var  <--- matched=uaMatch(navigator.userAgent);var 

[WARNING] Try to use a single 'var' statement per scope.
matched=uaMatch(navigator.userAgent); ---> var  <--- browser={};if(matched.browser

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){if(button.call){ ---> eval <--- (button.call)();}setTimeout

[WARNING] Try to use a single 'var' statement per scope.
openWith=prepare(clicked.openWith); ---> var  <--- placeHolder=prepare(clicked.placeHolder);var 

[WARNING] Try to use a single 'var' statement per scope.
placeHolder=prepare(clicked.placeHolder); ---> var  <--- replaceWith=prepare(clicked.replaceWith);var 

[WARNING] Try to use a single 'var' statement per scope.
replaceWith=prepare(clicked.replaceWith); ---> var  <--- closeWith=prepare(clicked.closeWith);var 

[WARNING] Try to use a single 'var' statement per scope.
closeWith=prepare(clicked.closeWith); ---> var  <--- openBlockWith=prepare(clicked.openBlockWith);var 

[WARNING] Try to use a single 'var' statement per scope.
openBlockWith=prepare(clicked.openBlockWith); ---> var  <--- closeBlockWith=prepare(clicked.closeBlockWith);var 

[WARNING] Try to use a single 'var' statement per scope.
closeBlockWith=prepare(clicked.closeBlockWith); ---> var  <--- multiline=clicked.multiline;if(replaceWith!==

[WARNING] Try to use a single 'var' statement per scope.
}else{string=string||selection; ---> var  <--- lines=[string],blocks=[]

[WARNING] Try to use a single 'var' statement per scope.
.split(/\r?\n/);}for( ---> var  <--- l=0;l<lines.length;

[WARNING] Try to use a single 'var' statement per scope.
){line=lines[l]; ---> var  <--- trailingSpaces;if(trailingSpaces=line.match(

[WARNING] Try to use a single 'var' statement per scope.
&&typeofoptions.previewParser==="function"){ ---> var  <--- data=options.previewParser($$.val(

[WARNING] Try to use a single 'var' statement per scope.
,selector:handlerOut});}} ---> var  <--- cX,cY,pX,pY;var track

[WARNING] Try to use a single 'var' statement per scope.
var cX,cY,pX,pY; ---> var  <--- track=function(ev){cX=ev

[WARNING] Try to use a single 'var' statement per scope.
;cY=ev.pageY;}; ---> var  <--- compare=function(ev,ob){ob

[WARNING] Try to use a single 'var' statement per scope.
,cfg.interval);}}; ---> var  <--- delay=function(ev,ob){ob

[WARNING] Try to use a single 'var' statement per scope.
ob,[ev]);}; ---> var  <--- handleHover=function(e){var ev=

[WARNING] Try to use a single 'var' statement per scope.
.extend({},e); ---> var  <--- ob=this;if(ob.hoverIntent_t)

[WARNING] Try to use a single 'var' statement per scope.
("mouseleave.superfish",targets,out);} ---> var  <--- touchevent="MSPointerDown.superfish";if(!ios){

[WARNING] Try to use a single 'var' statement per scope.
(!o){returnthis;} ---> var  <--- not=(o.retainPath===true)?

[WARNING] Try to use a single 'var' statement per scope.
(!o){returnthis;} ---> var  <--- $this=this.addClass(o.hoverClass)

[WARNING] Try to use a single 'var' statement per scope.
("sf-options")){returnfalse;} ---> var  <--- o=$.extend({},$

[WARNING] Try to use a single 'var' statement per scope.
el);});}}; ---> var  <--- transitionCall=function(el){clearInterval(interval

[WARNING] Try to use a single 'var' statement per scope.
);},delay);}; ---> var  <--- transition=function(el,direction){if

[WARNING] Try to use a single 'var' statement per scope.
("opacity",0);}}; ---> var  <--- appereance=function(el,sid){$

[WARNING] Try to use a single 'var' statement per scope.
[el.id]++;}; ---> var  <--- setNavigation=function(el){if(params

[WARNING] Try to use a single 'var' statement per scope.
"z-index":1001});}}; ---> var  <--- effect=function(el){var effA=

[WARNING] Try to use a single 'var' statement per scope.
].reverse();}}; ---> var  <--- randomEffect=function(arr){var i=

[WARNING] Try to use a single 'var' statement per scope.
[j]=tempi;}}; ---> var  <--- swirl=function(el){var n=

[WARNING] Try to use a single 'var' statement per scope.
{dowhile=false;}}}; ---> var  <--- rain=function(el){var n=

[WARNING] Try to use a single 'var' statement per scope.
{dowhile=false;}}}; ---> var  <--- straight=function(el){var counter=

[WARNING] Try to use a single 'var' statement per scope.
j;counter++;}}}; ---> var  <--- min=function(n,m){if

[WARNING] Try to use a single 'var' statement per scope.
}else{returnn;}}; ---> var  <--- max=function(n,m){if

[WARNING] Try to use a single 'var' statement per scope.
}else{returnn;}}; ---> var  <--- init=function(el){order[el

[WARNING] Try to use a single 'var' statement per scope.
){settings.single="metadata";} ---> var  <--- data=$.data(elem,settings.

[WARNING] Try to use a single 'var' statement per scope.
if(settings.type=="class"){ ---> var  <--- m=settings.cre.exec(elem.

[WARNING] Try to use a single 'var' statement per scope.
!elem.getElementsByTagName){return;} ---> var  <--- e=elem.getElementsByTagName(settings.name)

[WARNING] Try to use a single 'var' statement per scope.
if(elem.getAttribute!=undefined){ ---> var  <--- attr=elem.getAttribute(settings.name)

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
"{"+data+"}";}data= ---> eval <--- ("("+data+")");$.

[WARNING] Try to use a single 'var' statement per scope.
||[]);returnthis;} ---> var  <--- options=$.extend({},$

[WARNING] The variable options has already been declared in the same scope...
[]);returnthis;}var  ---> options <--- =$.extend({},$.

[WARNING] Try to use a single 'var' statement per scope.
control,input=$(this); ---> var  <--- eid=(this.name||"unnamed-rating").

[WARNING] Try to use a single 'var' statement per scope.
).replace(/^\_+|\_+$/g,""); ---> var  <--- context=$(this.form||document.

[WARNING] Try to use a single 'var' statement per scope.
this.form||document.body); ---> var  <--- raters=context.data("rating");if

[WARNING] Try to use a single 'var' statement per scope.
.fn.rating.calls};} ---> var  <--- rater=raters[eid]||context.data

[WARNING] Try to use a single 'var' statement per scope.
data("rating",control));} ---> var  <--- star=$('<div role="text" aria-label="'+this.title+

[WARNING] Try to use a single 'var' statement per scope.
"number"&&control.split>0){ ---> var  <--- stw=($.fn.width?star

[WARNING] Try to use a single 'var' statement per scope.
):0)||control.starWidth; ---> var  <--- spi=(control.count%control.split

[WARNING] Try to use a single 'var' statement per scope.
control.focus){returnthis;} ---> var  <--- input=$(this).data("rating.input"

[WARNING] Try to use a single 'var' statement per scope.
control.blur){returnthis;} ---> var  <--- input=$(this).data("rating.input"

[WARNING] Try to use a single 'var' statement per scope.
;}this.rating("drain"); ---> var  <--- current=$(control.current);var 

[WARNING] Try to use a single 'var' statement per scope.
current=$(control.current); ---> var  <--- starson=current.length?current.prevAll(

[WARNING] Try to use a single 'var' statement per scope.
);this.rating("draw"); ---> var  <--- current=$(control.current?control.

[WARNING] Try to use a single 'var' statement per scope.
.data("rating.input"):null); ---> var  <--- lastipt=$(control.inputs).filter

[WARNING] Try to use a single 'var' statement per scope.
.inputs).filter(":checked"); ---> var  <--- deadipt=$(control.inputs).not

[WARNING] Try to use a single 'var' statement per scope.
);})(jQuery);} ---> var  <--- UMODE_PC="pc",UMODE_MOBILE="mobile",UROLE_GUEST=

[WARNING] Try to use a single 'var' statement per scope.
".forum-post-panel",this).first(); ---> var  <--- mainDiv=$(".forum-post-main",this).first

[WARNING] Try to use a single 'var' statement per scope.
".forum-post-main",this).first(); ---> var  <--- height=panelDiv.outerHeight()-mainDiv.

[WARNING] Try to use a single 'var' statement per scope.
).css("float","none"); ---> var  <--- navbar=$("ul#navbar-menu").detach()

[WARNING] Try to use a single 'var' statement per scope.
);if(urole!==UROLE_GUEST){ ---> var  <--- BBEditor=$("#BBCodeEditor");var titleEditor=

[WARNING] Try to use a single 'var' statement per scope.
{var BBEditor=$("#BBCodeEditor"); ---> var  <--- titleEditor=$("#edit-title");var editorDiv=

[WARNING] Try to use a single 'var' statement per scope.
;var titleEditor=$("#edit-title"); ---> var  <--- editorDiv=$("#editor-div");var editorForm=

[WARNING] Try to use a single 'var' statement per scope.
;var editorDiv=$("#editor-div"); ---> var  <--- editorForm=$("#editor-form");var fileTable=

[WARNING] Try to use a single 'var' statement per scope.
;var editorForm=$("#editor-form"); ---> var  <--- fileTable=$("#ajax-file-list");var fileTableBody=

[WARNING] Try to use a single 'var' statement per scope.
;var fileTable=$("#ajax-file-list"); ---> var  <--- fileTableBody=$("tbody",fileTable);var 

[WARNING] Try to use a single 'var' statement per scope.
fileTableBody=$("tbody",fileTable); ---> var  <--- TextEditor=$("#TextEditor");var pmCount=

[WARNING] Try to use a single 'var' statement per scope.
;var TextEditor=$("#TextEditor"); ---> var  <--- pmCount=$.cookie("pmCount");if

[WARNING] Try to use a single 'var' statement per scope.
.replace("quote","raw")); ---> var  <--- author=data.find("span.username").html

[WARNING] Try to use a single 'var' statement per scope.
find("span.username").html(); ---> var  <--- quoteText='[quote="'+author+'"]'+data.

[WARNING] Try to use a single 'var' statement per scope.
top);BBEditor.focus(); ---> var  <--- data=$("#"+id.replace(

[WARNING] Try to use a single 'var' statement per scope.
.replace("edit","raw")); ---> var  <--- raw=data.find("pre.postbody").html

[WARNING] Try to use a single 'var' statement per scope.
markItUp({replaceWith:raw}); ---> var  <--- files=$.parseJSON(data.find(

[WARNING] Try to use a single 'var' statement per scope.
{fileTable.show();for( ---> var  <--- i=0;i<files.length;

[WARNING] Try to use a single 'var' statement per scope.
<files.length;i++){ ---> var  <--- fid=files[i].fid;var 

[WARNING] Try to use a single 'var' statement per scope.
fid=files[i].fid; ---> var  <--- path=files[i].path;var 

[WARNING] Try to use a single 'var' statement per scope.
path=files[i].path; ---> var  <--- imageExt=new Array("jpeg","gif","png"

[WARNING] Try to use a single 'var' statement per scope.
Array("jpeg","gif","png"); ---> var  <--- fileExt=path.split(".").pop

[WARNING] Try to use a single 'var' statement per scope.
split(".").pop(); ---> var  <--- bbcode;if(imageExt.indexOf(fileExt)

[WARNING] Try to use a single 'var' statement per scope.
[i].name+"[/file]";} ---> var  <--- row='<tr id="editfile-'+fid+'"><td><input type="text" maxlength="30" name="files['+fid+

[WARNING] Try to use a single 'var' statement per scope.
.error)==="[object Array]"){for( ---> var  <--- i=0;i<res.error.

[WARNING] Try to use a single 'var' statement per scope.
{fileTable.show();for( ---> var  <--- i=0;i<res.saved.

[WARNING] The variable i has already been declared in the same scope...
fileTable.show();for(var  ---> i <--- =0;i<res.saved.length

[WARNING] Try to use a single 'var' statement per scope.
.saved.length;i++){ ---> var  <--- path=res.saved[i].path

[WARNING] Try to use a single 'var' statement per scope.
res.saved[i].path; ---> var  <--- imageExt=new Array("jpeg","gif","png"

[WARNING] Try to use a single 'var' statement per scope.
Array("jpeg","gif","png"); ---> var  <--- fileExt=path.split(".").pop

[WARNING] Try to use a single 'var' statement per scope.
split(".").pop(); ---> var  <--- bbcode;if(imageExt.indexOf(fileExt)

[WARNING] Try to use a single 'var' statement per scope.
[i].name+"[/file]";} ---> var  <--- row='<tr id="editfile-'+path+'"><td><input type="text" maxlength="30" name="files['+path+

[WARNING] Try to use a single 'var' statement per scope.
var row=this.parentNode.parentNode; ---> var  <--- table=row.parentNode.parentNode;table.

[WARNING] The symbol preview is declared but is apparently never used.
This code can probably be written in a more compact way.
selectionEnd);}returnselection;}function ---> preview <--- (){return;if(typeofoptions.

[WARNING] The symbol phtml is declared but is apparently never used.
This code can probably be written in a more compact way.
);}functionrenderPreview(){var  ---> phtml <--- ;if(options.previewHandler&&typeofoptions.

[WARNING] The symbol fixIos is declared but is apparently never used.
This code can probably be written in a more compact way.
userAgent));})(), ---> fixIos <--- =(function(){if(ios)
